- content_for :include_js do
    = javascript_include_tag 'jquery.sortable.min'

- content_for :include_end_body
    javascript:
        new AjaxFormView({el: $("#addCourseForm"), refreshPage: true});

        $(".js-save-course").click( function(e) { e.preventDefault(); $("#addCourseForm").submit(); } );

- content_for :admin_tools
    = ui_element "ui/floating_button", { size: "big", title: "Save Course", selector: "js-save-course", icon: "fa-save"}


= render_js_template 'js-templates/backbone/_sortable_content_list_entry_backbone'

.create-course-form
    = form_for :course, url_for(:courses, :make, @course.slug), { :id => 'addCourseForm' } do |f|
        .row
            .col-lg-3
                .box#lessons_sortable_list
                    - content_for :include_end_body
                        - query = (find_from_id_list Lesson, @course.lesson_ids).to_json
                        javascript:

                            //course.slim
                            var lessonCollection = new SortableItemCollection();
                            var urlBase = "#{{ url_for(:editor, :lesson, @course.id, "") }}";

                            _.each(#{{ query }}, function(model)
                            {
                                var model = new SortableItem({
                                    id: model["_id"]["$oid"],
                                    title: model.title,
                                    link: urlBase + model["_id"]["$oid"]
                                });

                                lessonCollection.add(model);
                            });

                            new SortableItemListView({
                                el: $("#lessons_sortable_list"),
                                hiddenFieldName: 'course[lessons][]',
                                targetList: '#lessons',
                                collection: lessonCollection
                            });

                    a href="#{ url_for(:editor, :course, @course.id) }"
                        h3 = @course.title

                    p
                        ul#lessons.js-sortable

                    p
                        = f.label :lesson, :caption => "Lessons"
                        br
                        = f.select(:lesson, :collection => @lessons, :fields => [:title, :id], :class => 'js-select2')
                        a.js-sortable-add-new href="#"
                            i.fa.fa-plus-circle
            .col-lg-9
                .box

                    .row
                        .col-sm-6
                            p
                                = f.label :title, :caption => "Course Title"
                                = f.text_field :title, :class => "js-slug form-control", :'data-object' => :course, :'data-target' => :slug
                                = partial 'form_error', :collection => (errors_for @course, :title)
                        .col-sm-6
                            p
                                = f.label :slug, :caption => "Course Slug (For URL)"
                                = f.text_field :slug, :class => "form-control"
                                = partial 'form_error', :collection => (errors_for @course, :slug)
                    .row
                        .col-sm-6
                            p
                                = f.label :experience, :caption => "Course Experience"
                                = f.number_field :experience, :class => "form-control"
                                = partial 'form_error', :collection => (errors_for @course, :experience)
                        .col-sm-6
                            p
                                = f.label :image_url, :caption => "Background Image URL"
                                = f.text_field :image_url, :class => "form-control"
                                = partial 'form_error', :collection => (errors_for @course, :image_url)


                    p
                        = f.label :category, :caption => "Category"
                        br
                        = f.select(:category_id, :collection => @categories, :fields => [:name, :id], :class => 'js-select2')
                        = partial 'form_error', :collection => (errors_for @course, :category_id)


                    p
                        = f.label :description, :caption => "Course Description"
                        = f.text_area :description, :class => "form-control"
                        = partial 'form_error', :collection => (errors_for @course, :description)

                .box#prerequisites_sortable_list
                    - content_for :include_end_body
                        - query = (find_from_id_list Course, @course.prerequisite_ids).to_json
                        javascript:

                            //course.slim
                            new SortableItemListView({
                                el: $("#prerequisites_sortable_list"),
                                hiddenFieldName: 'course[prerequisites][]',
                                targetList: '#prerequisites',
                                collection: new SortableItemCollection(#{{ query }})
                            });

                    a href="#{ url_for(:editor, :course, @course.id) }"
                        h3 = @course.title

                    p
                        = f.label :prerequisite, :caption => "Prerequisites"
                        br
                        = f.select(:prerequisite, :collection => @courses, :fields => [:title, :id], :class => 'js-select2')
                        a.js-sortable-add-new href="#"
                            i.fa.fa-plus-circle

                    p
                        ul#prerequisites.js-sortable

                .box#follow_ons_sortable_list
                    - content_for :include_end_body
                        - query = (find_from_id_list Course, @course.follow_on_ids).to_json
                        javascript:

                            //course.slim
                            new SortableItemListView({
                                el: $("#follow_ons_sortable_list"),
                                hiddenFieldName: 'course[follow_ons][]',
                                targetList: '#follow_ons',
                                collection: new SortableItemCollection(#{{ query }})
                            });

                    a href="#{ url_for(:editor, :course, @course.id) }"
                        h3 = @course.title

                    p
                        = f.label :follow_on, :caption => "Follow Ons"
                        br
                        = f.select(:follow_on, :collection => @courses, :fields => [:title, :id], :class => 'js-select2')
                        a.js-sortable-add-new href="#"
                            i.fa.fa-plus-circle

                    p
                        ul#follow_ons.js-sortable


        .row
            .col-lg-12
                p.center-text
                    = f.submit "Save", :class => 'button create-button'
