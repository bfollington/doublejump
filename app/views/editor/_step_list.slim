- content_for :include_end_body
    - query = (find_from_id_list Step, @lesson.step_ids, [:id, :title]).to_json
    javascript:

        //_step_list.slim
        var collection = new SortableItemCollection();
        var urlBase = "#{{ url_for(:editor, :step, @course.id, @lesson.id, "") }}";
        var currentStep = "#{{ @step ? @step.id : '#' }}";

        var data = #{{ query }};

        _.each(data, function(model)
        {
            var id = model["_id"]["$oid"];
            var active = false;

            if (id == currentStep)
            {
                active = true;
            }

            var model = new SortableItem({
                id: id,
                title: model.title,
                link: urlBase + id,
                active: active
            });

            collection.add(model);
        });

        window.doublejump.stepListForCurrentLesson = collection;

        window.doublejump.stepListView = new SortableItemListView({
            el: $("#steps_sortable_list"),
            hiddenFieldName: 'lesson[steps][]',
            targetList: '#steps',
            collection: collection
        });

#steps_sortable_list
    p
        ul#steps.js-sortable.step-list
            = ui_element "ui/loading_spinner"

    p
        = form.select(:step, :collection => @steps, :fields => [:title, :id], :class => 'js-select2')
        a.js-sortable-add-new href="#"
            i.fa.fa-plus-circle

    a.js-sortable-create-new href="#"
        i.fa.fa-plus-circle
