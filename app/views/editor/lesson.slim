- content_for :include_js do
    = javascript_include_tag 'jquery.sortable.min'

- content_for :include_end_body
    javascript:
        editor.ajaxForm("#addLessonForm");

        $(".js-save-lesson").click( function(e) { e.preventDefault(); $("#addLessonForm").submit(); } );

- content_for :admin_tools
    = ui_element "ui/floating_button", { size: "big", title: "Save Lesson", selector: "js-save-lesson", icon: "fa-save"}

= render_js_template 'js-templates/backbone/_sortable_content_list_entry_backbone'

.create-lesson-form

    = form_for :lesson, url_for(:lessons, :make, @lesson.slug), { :id => 'addLessonForm' } do |f|
        .row
            .col-lg-3
                .box
                    a href="#{ url_for(:editor, :course, @course.id) }"
                        h3 = @course.title
                    a href="#{ url_for(:editor, :lesson, @course.id, @lesson.id) }"
                        h4 = @lesson.title

                    = partial 'editor/step_list', :locals => {form: f, hidden_field_name: 'lesson[steps][]'}

            .col-lg-9
                .box

                    .row
                        .col-sm-6
                            p
                                = f.label :title, :caption => "Lesson Title"
                                = f.text_field :title, :class => "js-slug form-control", :'data-object' => :lesson, :'data-target' => :slug
                                = partial 'form_error', :collection => (errors_for @lesson, :title)
                        .col-sm-6
                            p
                                = f.label :slug, :caption => "Lesson Slug (For URL)"
                                = f.text_field :slug, :class => 'form-control'
                                = partial 'form_error', :collection => (errors_for @lesson, :slug)


                    p
                        = f.label :experience, :caption => "Lesson Experience"
                        = f.number_field :experience, :class => 'form-control'
                        = partial 'form_error', :collection => (errors_for @lesson, :experience)

                    p
                        = f.label :description, :caption => "Lesson Description"
                        = f.text_area :description, :class => 'form-control'
                        = partial 'form_error', :collection => (errors_for @lesson, :description)

                    p
                        = f.label :final_message, :caption => "Lesson Final Message"
                        = f.text_area :final_message, :class => 'form-control'
                        = partial 'form_error', :collection => (errors_for @lesson, :final_message)

                .box#related_readings_sortable_list
                    - content_for :include_end_body
                        - query = (find_from_id_list RelatedReading, @lesson.related_reading_ids).to_json
                        javascript:

                            new SortableItemListView({
                                el: $("#related_readings_sortable_list"),
                                hiddenFieldName: 'lesson[related_readings][]',
                                targetList: '#related_readings',
                                collection: new SortableItemCollection(#{{ query }})
                            });

                    p
                        = f.label :related_reading, :caption => "Related Readings"
                        br
                        = f.select(:related_reading, :collection => @related_readings, :fields => [:title, :id], :class => 'js-select2')
                        a.js-sortable-add-new href="#"
                            i.fa.fa-plus-circle

                    p
                        ul#related_readings.js-sortable

                .box#downloads_sortable_list
                    - content_for :include_end_body
                        - query = (find_from_id_list Download, @lesson.download_ids).to_json
                        javascript:

                            new SortableItemListView({
                                el: $("#downloads_sortable_list"),
                                hiddenFieldName: 'lesson[downloads][]',
                                targetList: '#downloads',
                                collection: new SortableItemCollection(#{{ query }})
                            });

                    p
                        = f.label :title, :caption => "Downloads"
                        br
                        = f.select(:download, :collection => @downloads, :fields => [:title, :id], :class => 'js-select2')

                        a.js-sortable-add-new href="#"
                            i.fa.fa-plus-circle

                    p
                        ul#downloads.js-sortable


        .row
            p.center-text
                = f.submit "Save", :class => 'button create-button'

