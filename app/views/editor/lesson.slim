- content_for :include_js do
    = javascript_include_tag 'jquery.sortable.min'

- content_for :include_end_body
    javascript:
        sortable.bindSortableLists({itemSelector: "li"});
        editor.ajaxForm("#addLessonForm");

        $(".js-save-lesson").click( function(e) { e.preventDefault(); $("#addLessonForm").submit(); } );

- content_for :admin_tools
    = ui_element "ui/floating_button", { size: "big", title: "Save Lesson", selector: "js-save-lesson", icon: "fa-save"}

= render_js_template 'js-templates/_sortable_content_list_entry'

.create-lesson-form

    = form_for :lesson, url_for(:lessons, :make, @lesson.slug), { :id => 'addLessonForm' } do |f|
        .row
            .col-lg-3
                .box
                    a href="#{ url_for(:editor, :course, @course.id) }"
                        h3 = @course.title
                    a href="#{ url_for(:editor, :lesson, @course.id, @lesson.id) }"
                        h4 = @lesson.title

                    = partial 'editor/step_list', :locals => {form: f, hidden_field_name: 'lesson[steps][]'}

            .col-lg-9
                .box

                    .row
                        .col-sm-6
                            p
                                = f.label :title, :caption => "Lesson Title"
                                = f.text_field :title, :class => "js-slug form-control", :'data-object' => :lesson, :'data-target' => :slug
                                = partial 'form_error', :collection => (errors_for @lesson, :title)
                        .col-sm-6
                            p
                                = f.label :slug, :caption => "Lesson Slug (For URL)"
                                = f.text_field :slug, :class => 'form-control'
                                = partial 'form_error', :collection => (errors_for @lesson, :slug)


                    p
                        = f.label :experience, :caption => "Lesson Experience"
                        = f.number_field :experience, :class => 'form-control'
                        = partial 'form_error', :collection => (errors_for @lesson, :experience)

                    p
                        = f.label :description, :caption => "Lesson Description"
                        = f.text_area :description, :class => 'form-control'
                        = partial 'form_error', :collection => (errors_for @lesson, :description)

                    p
                        = f.label :final_message, :caption => "Lesson Final Message"
                        = f.text_area :final_message, :class => 'form-control'
                        = partial 'form_error', :collection => (errors_for @lesson, :final_message)

                .box
                    - hidden_field_name = 'lesson[related_readings][]'

                    p
                        = f.label :related_reading, :caption => "Related Readings"
                        br
                        = f.select(:related_reading, :collection => @related_readings, :fields => [:title, :id], :class => 'js-select2')
                        a.js-sortable-add-new data-read-selection-from='#lesson_related_reading' data-target-list='#related_readings' data-hidden-field-name='#{hidden_field_name}' href="#"
                            |
                            i.fa.fa-plus-circle

                    p
                        ul#related_readings.js-sortable
                            - if @lesson
                                - @lesson.related_reading_ids.each do |related_reading_id|
                                    - related_reading = RelatedReading.find( related_reading_id )
                                    = partial 'js-templates/sortable_content_list_entry', :locals => { :item_text => related_reading.title, :field_value => related_reading.id, :field_name => hidden_field_name}

                .box
                    - hidden_field_name = 'lesson[downloads][]'

                    p
                        = f.label :title, :caption => "Downloads"
                        br
                        = f.select(:download, :collection => @downloads, :fields => [:title, :id], :class => 'js-select2')
                        a.js-sortable-add-new data-read-selection-from='#lesson_download' data-target-list='#downloads' data-hidden-field-name='#{hidden_field_name}' href="#"
                            |
                            i.fa.fa-plus-circle

                    p
                        ul#downloads.js-sortable
                            - if @lesson
                                - @lesson.download_ids.each do |download_id|
                                    - download = Download.find( download_id )
                                    = partial 'js-templates/sortable_content_list_entry', :locals => { :item_text => download.title, :field_value => download.id, :field_name => hidden_field_name}


        .row
            p.center-text
                = f.submit "Save", :class => 'button create-button'

