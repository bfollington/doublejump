- content_for :include_end_body
    javascript:
        editingStep.init();
        aceUtil.convertTextAreas();

        sortable.bindSortableLists({afterDrag: editingStep.rebuildIdList, itemSelector: ".content", handle: 'h4'}, '.js-sortable-blocks');

        editor.ajaxForm("#updateStepOrderForm");
        editor.ajaxForm("#addStepForm");

        $(".js-save-step").click( function (e)
        {
            e.preventDefault();

            $("#updateStepOrderForm").submit();
            editingStep.beginSubmits();
        });

- content_for :include_js
    = partial 'includes/ace'
    = javascript_include_tag 'jquery.sortable.min'

- content_for :admin_tools
    = ui_element "ui/floating_button", { size: "big", title: "Save Step", selector: "js-save-step", icon: "fa-save"}

= render_js_template 'js-templates/backbone/_sortable_content_list_entry_backbone'

= render_js_template 'js-templates/editing/_markdown'
= render_js_template 'js-templates/editing/_code'
= render_js_template 'js-templates/editing/_hideable'
= render_js_template 'js-templates/editing/_math'
= render_js_template 'js-templates/editing/_definition'
= render_js_template 'js-templates/editing/_two_cols'
= render_js_template 'js-templates/editing/_step_content_id_entry'

.create-step-form
    .row
        .col-xs-12
            a.button.create-button href="#{ url_for(:editor, :index) }" Main Editor

            a.button.create-button.float-right href="#{ url_for(:courses, :make, @course.slug) }" Course Settings

            a.button.create-button.float-right href="#{ url_for(:lessons, :make, @lesson.slug) }" Lesson Settings
    .row
        .col-lg-3
            .box
                a href="#{ url_for(:editor, :course, @course.id) }"
                        h3 = @course.title
                a href="#{ url_for(:editor, :lesson, @course.id, @lesson.id) }"
                    h4 = @lesson.title

                = form_for :lesson, url_for(:lessons, :update_order, @lesson.id) , { :id => 'updateStepOrderForm' } do |f|

                    = partial 'editor/step_list', :locals => {form: f, hidden_field_name: 'lesson[steps][]'}
        .col-lg-9
            .box
                = form_for :step, url_for(:steps, :make, @step.slug), { :id => 'addStepForm' } do |f|

                    .row
                        .col-sm-6
                            p
                                = f.label :title, :caption => "Step Title"
                                = f.text_field :title, :class => "js-slug form-control", :'data-object' => :step, :'data-target' => :slug
                                = partial 'form_error', :collection => (errors_for @step, :title)
                        .col-sm-6
                            p
                                = f.label :slug, :caption => "Step Slug (For URL)"
                                = f.text_field :slug, :class => "form-control"
                                = partial 'form_error', :collection => (errors_for @step, :slug)

                    .row
                        .col-sm-6
                            p
                                = f.label :experience, :caption => "Step Experience"
                                = f.number_field :experience, :class => "form-control"
                                = partial 'form_error', :collection => (errors_for @step, :experience)
                        .col-sm-6
                            p
                                = f.label :is_sharing_step, :caption => "Is this a step to share progress? "
                                    = f.check_box :is_sharing_step

                    button.create-button.button.js-upload-link Upload File

                    .content-ids

            section.contents.js-sortable-blocks
                - if @step
                    - @step.get_contents_in_order.each do |content|
                        = partial content.editing_partial, :object => content

            .box
                button.create-button.button.js-add-markdown-content
                    i.fa.fa-file-text
                    |  Add Markdown Content

                button.create-button.button.js-add-code-content
                    i.fa.fa-code
                    |  Add Code Snippet

                button.create-button.button.js-add-hideable-content
                    i.fa.fa-code
                    |  Add Hideable Region

                button.create-button.button.js-add-math-content
                    i.fa.fa-code
                    |  Add Math Content

                button.create-button.button.js-add-definition-content
                    i.fa.fa-code
                    |  Add Block Definition

                button.create-button.button.js-add-two-cols-content
                    i.fa.fa-code
                    |  Add Two Columns


    #upload_frame
