scripts data-mixin="mixins/edit_step"

- content_for :include_js
    = javascript_include_tag 'jquery.sortable.min'

- content_for :admin_tools
    = ui_element "ui/floating_button", { size: "big", title: "Save Step", selector: "js-save-step", icon: "fa-save"}

= ui_uses 'ui/js/_sortable_content_list_entry'

= ui_uses 'ui/js/editing/_markdown'
= ui_uses 'ui/js/editing/_code'
= ui_uses 'ui/js/editing/_hideable'
= ui_uses 'ui/js/editing/_math'
= ui_uses 'ui/js/editing/_definition'
= ui_uses 'ui/js/editing/_two_cols'
= ui_uses 'ui/js/editing/_step_content_id_entry'

- if !@learning_module.nil?
    - submission_id = @learning_module.id
- else
    - submission_id = ""

.create-step-form
    .box
        .row
            .col-md-10
                - current = @learning_module ? @learning_module.id : ""
                = select_tag(:learning_module, :collection => @learning_modules, :fields => [:title, :id], :class => 'js-select2', :value => current)
            .col-md-2
                button.create-button.button.js-edit-concept-button Edit Concept
    .row
        .col-xs-12
            .box
                h2 Edit Concept
                = form_for :learning_module, url_for(:concepts, :make, submission_id), { :id => 'addStepForm' } do |f|

                    .row
                        .col-sm-6
                            p
                                = f.label :title, :caption => "Concept Title"
                                = f.text_field :title, :class => "js-slug form-control", :'data-object' => :learning_module, :'data-target' => :slug
                                - errors = (errors_for @learning_module, :title)
                                - if errors
                                    - errors.each do |error|
                                        = partial 'form_error', :object => error
                        .col-sm-6
                            p
                                = f.label :slug, :caption => "Concept Slug (For URL)"
                                = f.text_field :slug, :class => "form-control"
                                - errors = (errors_for @learning_module, :slug)
                                - if errors
                                    - errors.each do |error|
                                        = partial 'form_error', :object => error

                    .content-ids

            section.contents.js-sortable-blocks
                - if @learning_module
                    - @learning_module.get_contents_in_order.each do |content|
                        = partial content.editing_partial, :object => content

            .box
                button.create-button.button.js-add-content data-content="_markdown"
                    i.fa.fa-file-text
                    |  Add Markdown Content

                button.create-button.button.js-add-content data-content="_code"
                    i.fa.fa-code
                    |  Add Code Snippet

                button.create-button.button.js-add-content data-content="_hideable"
                    i.fa.fa-code
                    |  Add Hideable Region

                button.create-button.button.js-add-content data-content="_math"
                    i.fa.fa-code
                    |  Add Math Content

                button.create-button.button.js-add-content data-content="_definition"
                    i.fa.fa-code
                    |  Add Block Definition

                button.create-button.button.js-add-content data-content="_two_cols"
                    i.fa.fa-code
                    |  Add Two Columns


    #upload_frame
